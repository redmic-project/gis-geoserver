version: '3.9'

x-geoserver-root: &geoserver-root
  image: ${GEOSERVER_IMAGE_NAME:-kartoza/geoserver}:${GEOSERVER_IMAGE_TAG:-latest}
  networks:
    gis-net:
    postgres-net:
    traefik-net:
  volumes:
    - geoserver-data-vol:${GEOSERVER_DATA_DIR}
    - fonts-vol:${FONTS_DIR}
    - footprints-vol:${FOOTPRINTS_DATA_DIR}
    - cache-vol:${GEOWEBCACHE_CACHE_DIR}
  healthcheck:
    test: >
      curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null
      -u '${GEOSERVER_ADMIN_USER}:${GEOSERVER_ADMIN_PASSWORD}'
      http://localhost:${GEOSERVER_PORT}${GEOSERVER_HEALTH_PATH}
    interval: ${GEOSERVER_HEALTHCHECK_INTERVAL:-30s}
    timeout: ${GEOSERVER_HEALTHCHECK_TIMEOUT:-15s}
    retries: ${GEOSERVER_HEALTHCHECK_RETRIES:-5}
    start_period: ${GEOSERVER_HEALTHCHECK_START_PERIOD:-5m}

x-geoserver-environment: &geoserver-environment
  GEOSERVER_DATA_DIR:
  GEOWEBCACHE_CACHE_DIR:
  FONTS_DIR:
  FOOTPRINTS_DATA_DIR:
  EXTRA_CONFIG_DIR:
  GEOSERVER_LOG_LOCATION: 'logs/{{.Service.Name}}-{{.Task.Slot}}.log'
  HTTP_PORT: '${GEOSERVER_PORT}'
  HTTP_SCHEME:
  HTTP_PROXY_NAME: '${GEOSERVER_SUBDOMAIN}.${PUBLIC_HOSTNAME}'
  GEOSERVER_ADMIN_USER:
  GEOSERVER_ADMIN_PASSWORD:
  STABLE_EXTENSIONS:
  COMMUNITY_EXTENSIONS:
  CLUSTERING:
  RANDOMSTRING: '{{.Service.Name}}-{{.Task.Slot}}'
  INSTANCE_STRING: '{{.Service.Name}}-{{.Task.Slot}}'
  CLUSTER_DURABILITY:
  CLUSTER_CONNECTION_RETRY_COUNT:
  CLUSTER_CONNECTION_MAX_WAIT:
  TOMCAT_EXTRAS:
  ROOT_WEBAPP_REDIRECT:
  GEOSERVER_NODE_OPTS: 'id:{{.Service.Name}}-{{.Task.Slot}};background:${GEOSERVER_LABEL_BACKGROUND};color:${GEOSERVER_LABEL_COLOR}'
  CSRF_WHITELIST: '${GEOSERVER_SUBDOMAIN}.${PUBLIC_HOSTNAME}'
  DB_BACKEND: postgres
  HOST: postgres-gwc
  POSTGRES_PORT: 5432
  POSTGRES_DB:
  POSTGRES_USER:
  POSTGRES_PASS: '${POSTGRES_PASSWORD}'
  DISK_QUOTA_SIZE:
  GEOSERVER_LOG_LEVEL:
  DISABLE_CORS:

x-geoserver-deploy: &geoserver-deploy
  mode: replicated
  restart_policy:
    delay: ${GEOSERVER_RESTART_DELAY:-10s}
  update_config:
    delay: ${GEOSERVER_UPDATE_DELAY:-3m}

x-geoserver-traefik-common-service-labels: &geoserver-traefik-common-service-labels
  traefik.enable: ${TRAEFIK_ENABLE}
  traefik.http.services.geoserver.loadbalancer.server.port: ${GEOSERVER_PORT}
  traefik.http.services.geoserver.loadbalancer.sticky.cookie: 'true'
  traefik.http.services.geoserver.loadbalancer.sticky.cookie.name: ${TRAEFIK_COOKIE_NAME}
  traefik.http.services.geoserver.loadbalancer.sticky.cookie.httponly: '${TRAEFIK_COOKIE_HTTPONLY}'
  traefik.http.services.geoserver.loadbalancer.sticky.cookie.secure: '${TRAEFIK_COOKIE_SECURE}'
  traefik.http.services.geoserver.loadbalancer.sticky.cookie.samesite: ${TRAEFIK_COOKIE_SAMESITE}
  traefik.http.services.geoserver.loadbalancer.healthcheck.path: ${GEOSERVER_HEALTH_PATH}
  traefik.http.services.geoserver.loadbalancer.healthcheck.headers.authorization: ${TRAEFIK_HEALTH_AUTH}

services:
  geoserver-master:
    << : *geoserver-root
    environment:
      << : *geoserver-environment
      TOGGLE_MASTER: 'true'
      TOGGLE_SLAVE: 'false'
      WEB_INTERFACE: 'false'
      EMBEDDED_BROKER: enabled
      BROKER_URL: 'tcp://0.0.0.0:${BROKER_PORT}'
      READONLY: disabled
    deploy:
      << : *geoserver-deploy
      replicas: 1
      labels:
        << : *geoserver-traefik-common-service-labels

        traefik.http.routers.geoserver-master-admin.entrypoints: ${TRAEFIK_ENTRYPOINT}
        traefik.http.routers.geoserver-master-admin.rule: Host(`${GEOSERVER_SUBDOMAIN}.${PUBLIC_HOSTNAME}`) && (PathPrefix(`/geoserver/web`) || PathPrefix(`/geoserver/rest`) || PathPrefix(`/geoserver/j_spring_security`) || PathPrefix(`/geoserver/gwc/rest`))
        traefik.http.middlewares.add-proxy-protocol-header.headers.customrequestheaders.x-forwarded-proto: https
        traefik.http.routers.geoserver-master-admin.middlewares: add-proxy-protocol-header
        traefik.http.routers.geoserver-master-admin.service: geoserver-master

        traefik.http.routers.geoserver-master.entrypoints: ${TRAEFIK_ENTRYPOINT}
        traefik.http.routers.geoserver-master.rule: Host(`${GEOSERVER_SUBDOMAIN}.${PUBLIC_HOSTNAME}`) && PathPrefix(`/geoserver`)
        traefik.http.routers.geoserver-master.service: geoserver

        traefik.http.services.geoserver-master.loadbalancer.server.port: ${GEOSERVER_PORT}

  geoserver-node:
    << : *geoserver-root
    environment:
      << : *geoserver-environment
      TOGGLE_MASTER: 'false'
      TOGGLE_SLAVE: 'true'
      DISABLE_WEB_INTERFACE: 'true'
      EMBEDDED_BROKER: disabled
      BROKER_URL: 'tcp://geoserver-master:${BROKER_PORT}'
      READONLY: enabled
      GEOSERVER_XSTREAM_WHITELIST:
    deploy:
      << : *geoserver-deploy
      replicas: ${GEOSERVER_NODE_REPLICAS:-1}
      placement:
        max_replicas_per_node: 1
      labels:
        << : *geoserver-traefik-common-service-labels

        traefik.http.routers.geoserver-node.entrypoints: ${TRAEFIK_ENTRYPOINT}
        traefik.http.routers.geoserver-node.rule: Host(`${GEOSERVER_SUBDOMAIN}.${PUBLIC_HOSTNAME}`) && PathPrefix(`/geoserver`)

        traefik.http.routers.geoserver-root.entrypoints: ${TRAEFIK_ENTRYPOINT}
        traefik.http.routers.geoserver-root.rule: Host(`${GEOSERVER_SUBDOMAIN}.${PUBLIC_HOSTNAME}`) && PathPrefix(`/`)
        traefik.http.middlewares.geoserver-addprefix.addprefix.prefix: /geoserver
        traefik.http.routers.geoserver-root.middlewares: geoserver-addprefix

  postgres-gwc:
    image: ${POSTGRES_IMAGE_NAME:-postgres}:${POSTGRES_IMAGE_TAG:-alpine}
    command: >
      -c work_mem=${POSTGRES_GWC_WORK_MEM}
      -c max_wal_size=${POSTGRES_GWC_MAX_WAL_SIZE}
    environment:
      POSTGRES_USER:
      POSTGRES_PASSWORD:
      POSTGRES_DB:
      PGDATA:
      POSTGRES_INITDB_WALDIR:
    networks:
      gis-net:
    volumes:
      - postgres-data-vol:${PGDATA}
      - wal-vol:${POSTGRES_INITDB_WALDIR}
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
      interval: ${POSTGRES_HEALTHCHECK_INTERVAL:-30s}
      timeout: ${POSTGRES_HEALTHCHECK_TIMEOUT:-15s}
      retries: ${POSTGRES_HEALTHCHECK_RETRIES:-5}
      start_period: ${POSTGRES_HEALTHCHECK_START_PERIOD:-1m}
    deploy:
      mode: replicated
      replicas: ${POSTGRES_GWC_REPLICAS:-1}
      restart_policy:
        delay: ${POSTGRES_GWC_RESTART_DELAY:-1s}
      update_config:
        delay: ${POSTGRES_GWC_UPDATE_DELAY:-30s}
      resources:
        limits:
          cpus: '${POSTGRES_GWC_RESOURCES_LIMITS_CPUS:-1}'
          memory: ${POSTGRES_GWC_RESOURCES_LIMITS_MEMORY:-128M}
        reservations:
          cpus: '${POSTGRES_GWC_RESOURCES_RESERVATIONS_CPUS:-0.01}'
          memory: ${POSTGRES_GWC_RESOURCES_RESERVATIONS_MEMORY:-64M}

networks:
  gis-net:
    name: ${GIS_NET_NAME:-gis-net}
    driver: ${GIS_NET_DRIVER:-overlay}
    attachable: ${GIS_NET_ATTACHABLE:-true}

  postgres-net:
    name: ${POSTGRES_NET_NAME:-postgres-net}
    driver: ${POSTGRES_NET_DRIVER:-overlay}
    external: true

  traefik-net:
    name: ${TRAEFIK_NET_NAME:-traefik-net}
    driver: ${TRAEFIK_NET_DRIVER:-overlay}
    external: true
